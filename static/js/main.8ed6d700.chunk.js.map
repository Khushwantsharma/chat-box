{"version":3,"sources":["UserList.js","Component/Profile.js","socket.js","App.js","reportWebVitals.js","index.js"],"names":["UserList","user","g","soc","useState","groupuserlist","setgroupuserlist","defaultlist","setdeafultlist","useEffect","console","log","prevState","k","slice","map","dat","isGroup","online","push","onClick","addToGroup","bind","name","className","flag","filter","dt","e","preventDefault","onSubmit","gp_name","target","group_name","value","emit","htmlFor","type","id","required","isgroup","index","uname","defaultlist1","setdeafultlist1","isSet","groupmod","setgroupmod","exi","groupMember","isPresent","element","forEach","Socket","io","autoConnect","App","Profileinfo","setProfileinfo","creategroup","setcreategroup","lastmessageref","useRef","list","setList","Activeuser","setActiveuser","au","setau","username","setUsername","users","setUsers","onAny","event","args","on","er","data","length","message","activeusersetter","i","key","y","from","p","mes","ismine","alert","a","group","sender","owner","findIndex","j","splice","gname","propState","current","scrollIntoView","smooth","meslist","last","ref","Profile","classes","auth","connect","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ed6d700.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport react from 'react';\n\nconst UserList=({user,g,soc})=>{\n      // let group_user=[];\n      const [groupuserlist,setgroupuserlist]=useState([]);\n      const [defaultlist,setdeafultlist]=useState([]);\n      useEffect(()=>{\n        console.log(\"useeffect userlist\");\n        console.log(\"user:\",user);\n        setdeafultlist(prevState=>{\n            let k=prevState.slice();\n            // if(k.length==0){\n            user.map(dat=>{\n              if((!dat.isGroup)&&(dat.online)){\n              // if((!dat.isGroup)){\n                k.push(<div key={dat.name} onClick={addToGroup.bind(this,dat.name)} className={\"grouplistname\"}>{dat.name}</div>);\n              }\n              });\n          console.log(\"user k:\",k);\n          return k;\n        })\n      },[]);\n      \n    const addToGroup=(dat)=>{\n        // e.preventDefault();\n        console.log(\"[addToGroup]:\",dat);\n        setgroupuserlist(prevState=>{\n          let k=prevState.slice();\n          let flag=0;\n          for(let l of k){\n            if(l==dat){\n              console.log(\"[addToGroup]: Already present\");\n              flag=1;\n              break;\n            } \n          }\n          if(flag){\n            k=k.filter(dt=>{\n              if(dt!=dat){\n                return dt;\n              }\n            });\n            console.log(\"filtered list:\",k);\n          }else{\n            console.log(\"[addToGroup]: New data\");\n            k.push(dat);\n          }\n\n          return k;\n        })\n    }\n    const try1=(e)=>{\n      e.preventDefault();\n      let gp_name=e.target.group_name.value;\n      console.log(\"called\",gp_name);\n      soc.emit('new-group-list',gp_name,groupuserlist);\n      g(false);\n    }\n    const cancelGroup=(e)=>{\n      e.preventDefault();\n      // console.log(\"called\");\n      g(false);\n    }\n    if(groupuserlist){\n      let h=groupuserlist.map(dt=>{\n        return(<div className=\"grouplistname\">{dt}</div>)\n      });\n    }\n    return (\n        <div className=\"group--main\">\n        <div className=\"group--main-box\">\n            {/* <form>\n              <label htmlFor=\"user_name\">User Name:</label>\n              <input type=\"text\" id=\"user_name\"/>\n              <button type=\"submit\">Add</button>\n          </form> */}\n          <button className=\"cancel\" onClick={cancelGroup}>☠️❌️Cancel🚫️☠️</button>\n          <form  className=\"groupname-form\" onSubmit={try1}>\n              <label htmlFor=\"group_name\">Group Name:</label>\n              <input type=\"text\" id=\"group_name\" required/>\n              <button type=\"submit\">Create</button>\n          </form>\n          <div className=\"group--main-box--divider\">\n            <div className=\"group--default--list\">\n              <div className=\"title__mid\">Select Users</div>\n              {/* <div className=\"grouplistname\">user</div> */}\n              {/* {defaultlist} */}\n              <div className=\"group--users--list\">\n                {defaultlist}\n              </div>\n            </div>\n            <div className=\"group--selected--list\">\n            <div className=\"title__mid\">Selected Users</div>\n            <div className=\"group--users--list\">\n                {groupuserlist.map(e=>{\n                  return (<div key={e} className=\"grouplistname\">{e}</div>);\n                })}\n              </div>\n            </div>\n          </div>\n          {/* <div className=\"group--users--list\">\n          {defaultlist}\n          </div> */}\n          \n\n        </div>\n      </div>\n    );\n}\nexport default UserList;","import { useEffect, useState } from 'react';\nimport react from 'react';\n\nconst UserList=({isgroup,user,flag,soc,index,name,uname})=>{\n      // let group_user=[];\n      const [groupuserlist,setgroupuserlist]=useState([]);\n      const [defaultlist,setdeafultlist]=useState([]);\n      const [defaultlist1,setdeafultlist1]=useState([]);\n      \n      const [groupmod,setgroupmod]=useState({name:\"\",isSet:false});\n      useEffect(()=>{\n        let exi=user[index].groupMember.slice();\n        console.log(\"[UseEffect]:\");\n        console.log(\"user:\",user,\"index:\",index);\n        setdeafultlist(prevState=>{\n            let k=prevState.slice();\n            user.map(dat=>{\n              console.log(dat.name,dat.online);\n              if((!dat.isGroup)&&(dat.online)&&(dat.name!=uname)&&(!isPresent(dat.name,exi))){\n                k.push(<div key={dat.name} onClick={addToGroup.bind(this,dat.name)} className={\"grouplistname\"}>{dat.name}</div>);\n              } \n            });\n          // console.log(\"user k:\",k);\n          return k;\n        })\n        if(isgroup){\n          setdeafultlist1(prevState=>{\n            let k=prevState.slice();\n            exi.map((element)=>{\n                k.push(<div key={element} onClick={addToGroup.bind(this,element)} className={\"grouplistname\"}>{element}</div>);\n            })\n            return k;\n          });\n        }\n\n      },[]);\n      const isPresent=(dat,exi)=>{\n        let flag=false;\n        exi.forEach(element => {\n          \n          if(dat==element){\n            console.log(\"@@:\",dat,element)\n            flag=true;\n            return true;\n          }\n        });\n        return flag;\n      }\n    const addToGroup=(dat)=>{\n        // e.preventDefault();\n        // console.log(\"[addToGroup]:\",dat);\n        setgroupuserlist(prevState=>{\n          let k=prevState.slice();\n          let flag=0;\n          for(let l of k){\n            if(l==dat){\n              console.log(\"[addToGroup]: Already present\");\n              flag=1;\n              break;\n            } \n          }\n          if(flag){\n            k=k.filter(dt=>{\n              if(dt!=dat){\n                return dt;\n              }\n            });\n            // console.log(\"filtered list:\",k);\n          }else{\n            // console.log(\"[addToGroup]: New data\");\n            k.push(dat);\n          }\n\n          return k;\n        })\n    }\n    const try1=(e)=>{\n      e.preventDefault();\n      let gp_name=name;\n      // console.log(\"User add to group list :\",groupuserlist);\n      if(groupmod.name==\"add\"){\n        soc.emit('add-to-group',gp_name,groupuserlist,user[index].groupMember);\n      }\n      else{\n      soc.emit('remove-from-group',gp_name,groupuserlist,user[index].groupMember);\n      }\n      flag(false);\n    }\n    const leave_delete=(dat,e)=>{\n      e.preventDefault();\n      soc.emit('leave-from-group',name,[uname],user[index].groupMember);\n      flag(false);\n    }\n    const cancelGroup=(e)=>{\n      e.preventDefault();\n      // console.log(\"called\");\n      flag(false);\n    }\n    if(groupuserlist){\n      let h=groupuserlist.map(dt=>{\n        return(<div className=\"grouplistname\">{dt}</div>)\n      });\n    }\n    return (\n        <div className=\"group--main\">\n        <div className=\"group--main-box\">\n          <button className=\"cancel\" onClick={cancelGroup}>☠️❌️Back🚫️☠️</button>\n          {groupmod.isSet?(\n            <div>\n            <div className=\"grouplistname\" onClick={()=>{setgroupmod({name:\"\",isSet:false});setgroupuserlist([])}}>Back</div>\n            <div className=\"grouplistname\" onClick={try1}>Done</div>\n            </div>\n          ):(\n            <div>\n              <div className=\"grouplistname\" onClick={()=>setgroupmod({name:\"add\",isSet:true})}>AddPeople</div>\n              <div className=\"grouplistname\"onClick={()=>setgroupmod({name:\"remove\",isSet:true})}>RemovePeople</div>\n              <div className=\"grouplistname\"onClick={leave_delete.bind(this,\"leave\")}>Leave</div>\n            </div>\n          )}\n          {groupmod.isSet&&(groupmod.name==\"add\")?(<div className=\"group--main-box--divider\">\n            <div className=\"group--default--list\">\n              <div className=\"title__mid\">Select Users</div>\n              <div className=\"group--users--list\">\n                {defaultlist}\n              </div>\n            </div>\n            <div className=\"group--selected--list\">\n            <div className=\"title__mid\">Selected Users</div>\n            <div className=\"group--users--list\">\n                {groupuserlist.map(e=>{\n                  return (<div key={e} className=\"grouplistname\">{e}</div>);\n                })}\n              </div>\n            </div>\n          </div>):null}{groupmod.isSet&&(groupmod.name==\"remove\")?<div className=\"group--main-box--divider\">\n            <div className=\"group--default--list\">\n              <div className=\"title__mid\">Select Users</div>\n              <div className=\"group--users--list\">\n                {defaultlist1}\n              </div>\n            </div>\n            <div className=\"group--selected--list\">\n            <div className=\"title__mid\">Selected Users</div>\n            <div className=\"group--users--list\">\n                {groupuserlist.map(e=>{\n                  return (<div key={e} className=\"grouplistname\">{e}</div>);\n                })}\n              </div>\n            </div>\n          </div>:null}\n          {/* <div className=\"group--main-box--divider\">\n            <div className=\"group--default--list\">\n              <div className=\"title__mid\">Select Users</div>\n              <div className=\"group--users--list\">\n                {defaultlist}\n              </div>\n            </div>\n            <div className=\"group--selected--list\">\n            <div className=\"title__mid\">Selected Users</div>\n            <div className=\"group--users--list\">\n                {groupuserlist.map(e=>{\n                  return (<div key={e} className=\"grouplistname\">{e}</div>);\n                })}\n              </div>\n            </div>\n          </div>\n           */}\n        </div>\n      </div>\n    );\n}\nexport default UserList;","import { io } from 'socket.io-client';\n  const Socket= io('https://hgchat.herokuapp.com/',{\n      autoConnect:false\n  });\nexport default Socket;","import { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport UserList from './UserList';\nimport Profile from './Component/Profile';\nimport soc from './socket';\nimport { Socket } from 'socket.io-client';\n\n\nconst App=()=>{\n  const [Profileinfo,setProfileinfo]=useState(false);\n  const [creategroup,setcreategroup]=useState(false);\n  const lastmessageref=useRef();\n  const [list,setList]=useState([]);\n  const [Activeuser,setActiveuser]=useState({name:\"\",index:-1,isGroup:false,isSet:false});\n  const [au,setau]=useState(\"\");\n  const [username,setUsername]=useState({name:\"\",isSet:false});\n  //syntax[name:,message:[],online:,isGroup:]\n  //syntax[name:,message:[],online:,isGroup:,groupMember:]    \n  //syntax message:{mes:mes,ismine:true}\n  //syntax g-message:{mes:mes,ismine:true,owner:\"\"}\n  const [users,setUsers]=useState([]);\n  useEffect(()=>{\n    soc.onAny((event, ...args) => {\n      console.log(event, args);\n    });\n    soc.on(\"connect_error\",(er)=>{\n      console.log(\"err:\",er);\n      setUsername({name:\"\",isSet:false});\n    });\n    soc.on('users',(data)=>{\n    // setUsername(prevState=>return({name:prevState.name,isSet:true}));\n      if(data.length==0){\n      }else{\n        setUsers((prevState)=>{\n          let k=prevState.slice();\n          data.forEach(dat => {\n            k.push({name:dat.name,message:[],online:dat.online,isGroup:false})\n          });\n          // console.log(k);\n          return k;\n        });\n        setList(prevState=>{\n          let k=prevState.slice();\n              data.forEach(dat => {\n                  k.push(<div key={dat.name} onClick={activeusersetter.bind(this,dat.name)} className={dat.online?\"username--active\":\"username\"}>{dat.name}</div>);\n              });\n          return k;\n      })\n      }\n    });\n\n    soc.on('new-user',dat=>{\n      setUsers((prevState)=>{\n        let k;\n        // console.log(\"prevstate:\",prevState);\n        if(!prevState){\n          // console.log(\"PrevStatE:\",prevState);\n          k=[]\n        }\n        else{k=prevState.slice();}\n        k.push({name:dat.name,message:[],online:dat.online,isGroup:false});\n        return k;\n      });\n      setList(prevState=>{\n        let k=prevState.slice();\n            k.push(<div key={dat.name} onClick={activeusersetter.bind(this,dat.name)} className={dat.online?\"username--active\":\"username\"}>{dat.name}</div>);\n        return k;\n    });\n    });\n\n    //for online /offline\n    soc.on('offline',(dat)=>{\n      setList(prevState=>{\n        let k=prevState.slice();\n        for(let i=0;i<k.length;i++){\n          if(k[i].key==dat){\n            k[i]=(<div key={dat} onClick={activeusersetter.bind(this,dat)} className=\"username\">{dat}</div>)\n            // console.log(k[i]);\n          }\n        }\n        return k;\n      });\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        let i;\n        for(let y=0;y<k.length;y++){\n          if(dat==k[y].name){\n            i=y;\n          }\n        }\n        k[i].online=false;\n        k[i].message=[];\n        return k;\n      });\n    })\n\n    //for online\n    soc.on('online',(dat)=>{\n      setList(prevState=>{\n        let k=prevState.slice();\n        for(let i=0;i<k.length;i++){\n          if(k[i].key==dat){\n            k[i]=(<div key={dat} onClick={activeusersetter.bind(this,dat)} className=\"username--active\">{dat}</div>)\n            // console.log(k[i]);\n          }\n        }\n        return k;\n      });\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        let i;\n        for(let y=0;y<k.length;y++){\n          if(dat==k[y].name){\n            i=y;\n          }\n        }\n        k[i].online=true;\n        return k;\n      });\n\n\n    })\n\n    //recevice user message.\n    soc.on('private-message',(dat,from)=>{\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        let i;\n        for(let y=0;y<k.length;y++){\n          if(from==k[y].name){\n            i=y;\n          }\n        }\n        let p=k[i].message;\n        p.push({mes:dat,ismine:false});\n        k[i].message=p;\n        return k;\n      });\n    });\n    soc.on(\"error\",(er)=>{\n      alert(er);\n    })\n    soc.on('new-group-req',(a,list)=>{\n      // console.log(\"check:\",list);\n      // console.log(\"new user request\",a);\n      soc.emit('new-group',a,list);\n    });\n    soc.on('room-joined',(dat,list)=>{\n      // console.log(\"room joined:\",list);\n      //under progress\n      setUsers((prevState)=>{\n        let k;\n        // console.log(\"prevstate:\",prevState);\n        if(!prevState){\n          // console.log(\"PrevStatE:\",prevState);\n          k=[];\n        }\n        else{k=prevState.slice();}\n        k.push({name:dat,message:[],online:false,isGroup:true,groupMember:list});\n        return k;\n      });\n      setList(prevState=>{\n        let k=prevState.slice();\n            k.push(<div key={dat} onClick={activeusersetter.bind(this,dat)} className=\"group--user\">{dat}</div>);\n        return k;\n    });\n    });\n    //To get message for group\n    soc.on('group-message',(dat,group,sender)=>{\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        let i;\n        for(let y=0;y<k.length;y++){\n          if(group==k[y].name){\n            i=y;\n          }\n        }\n        let p=k[i].message;\n        p.push({mes:dat,ismine:false,owner:sender});\n        k[i].message=p;\n        return k;\n      });\n    });\n    soc.on('group-user-added',(name,list)=>{\n      \n      setUsers(prevState=>{\n        let flag=-1;\n        let k=prevState.slice();\n        flag=k.findIndex(e=>e.name==name);\n        let j=k[flag].groupMember.slice();\n        j.push(...list);\n        k[flag].groupMember=j;\n        return k;\n      });\n    });\n\n    soc.on('user-left',(name,list)=>{\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        for(let i=0;i<k.length;i++){\n          if(k[i].name==name){\n            k[i].groupMember=list;\n            break;\n          }\n        }\n        return k;\n      })\n    });\n\n    soc.on('remove-from-group-req',(name)=>{\n      soc.emit('leave-group',name);\n      setActiveuser({name:\"\",index:-1,isGroup:false,isSet:false});\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        for(let i=0;i<k.length;i++){\n          if(k[i].name==name){\n            \n            k.splice(i,1);\n            console.log(`found :k${k} &i:${i}`);\n            break;\n          }\n        }\n        return k;\n      });\n      setList(prevState=>{\n        \n          let k=prevState.slice();\n          for(let i=0;i<k.length;i++){\n            if(k[i].key==name){\n              k.splice(i,1);\n              // console.log(k[i]);\n            }\n          }\n          return k;\n      })\n    });\n    soc.on('group-exit',(gname,dat)=>{\n      setUsers(prevState=>{\n        let k=prevState.slice();\n          for(let i=0;i<k.length;i++){\n            if(k[i].name==gname){\n              for(let j=0;j<k[i].groupMember.length;j++){\n                if(k[i].groupMember[j]==dat){\n                  k[i].groupMember.splice(j,1);\n                  j--;\n                }\n              }\n              break;\n            }\n          }\n          return k;\n      })\n    })\n\n\n    // soc.on(\"connect_error\",(err)=>{\n    //   console.log(\"err:\",err);\n    //   if(err===\"already exist\"){\n    //     setUsername({name:\"\",isSet:false});\n    //     alert(\"already exist\");\n    //   }\n    //   else{\n    //     alert(\"something wrong:\",err);\n    //   }\n    // })\n  }\n  ,[]);\n  useEffect(()=>{\n    if(au!=\"\"){\n      setActiveuser(propState=>{\n        let k={...propState};\n        \n        if(users){\n        k.name=au;\n        k.isSet=true;\n        for(let i=0;i<users.length;i++){\n          if(au==users[i].name){\n            if(users[i].isGroup){\n              k.isGroup=true;\n              k.index=i;\n              break;\n            }else{\n              k.index=i;\n              k.isGroup=false;\n              break;\n            }\n          }\n        }}\n        // console.log(\"k:\",k);\n        return k;\n      })\n    }\n  },[au]);\n  useEffect(()=>{\n    if(lastmessageref.current){\n      lastmessageref.current.scrollIntoView({smooth:true});\n    }\n  },[lastmessageref.current]);\n//  make connecntion with server.\n  const userNameDone=(e)=>{\n    // console.log(\"[userNameDone]: Called\");\n    e.preventDefault(); \n    setUsername({name:username.name,isSet:true});\n    soc.auth = {'username': username.name };\n    soc.connect();\n  }\n  //taking user input on for username\n\n  const userNameSetter=(e)=>{\n    setUsername({name:e.target.value,isSet:false});\n  }\n\n  //active user setter .\n  const activeusersetter=(dat)=>{\n    // console.log(\"[Activeusersetter]\",dat);\n    setau(dat);  \n  }\n  const mesSend=(e)=>{\n    e.preventDefault();\n    let mes=e.target.mes.value;\n    // console.log(mes,Activeuser.isGroup);\n    if(Activeuser.isGroup){\n      soc.emit('group-message',mes,Activeuser.name);\n      // console.log(\"username@@@:\",username.name);\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        let p=k[Activeuser.index].message.slice();\n        p.push({mes:mes,ismine:true,owner:\"\"});\n        k[Activeuser.index].message=p;\n        return k;\n      });\n\n    }else{\n      soc.emit('private-message',mes,Activeuser.name);\n      setUsers(prevState=>{\n        let k=prevState.slice();\n        let p=k[Activeuser.index].message.slice();\n        p.push({mes:mes,ismine:true});\n        k[Activeuser.index].message=p;\n        return k;\n      });\n    }\n    \n  }\n  // //Functions to create group:\n  const creategroup_signal=(e)=>{\n    e.preventDefault();\n    setcreategroup(true);\n  }\n  \n  // //Functions to Open Profile component:\n  const ProfileInfoSignal=(e)=>{\n    e.preventDefault();\n    setProfileinfo(true);\n  }\n\n  if(!username.isSet){\n    return (\n      <div className=\"Username--main\">\n        <form className=\"Username--form\" onSubmit={userNameDone}>\n          <label htmlFor=\"em\" >UserName(Email):</label>\n          <input className=\"text--area\" type=\"email\" id=\"em\" onChange={userNameSetter} name=\"mes\" required />\n          <button classes=\"button--height text--bold\">Enter</button>\n        </form>\n      </div>\n    );\n  }\n  let meslist;\n  if(Activeuser.isSet&&users){\n    if(Activeuser.isGroup){\n      meslist=users[Activeuser.index].message.map((dat,index)=>{\n        let last= (index==(users[Activeuser.index].message.length-1))\n        return(\n          <div ref={last?lastmessageref:null} className={dat.ismine?\"GMessage--main\": \"GMessage--oth\"}>\n                    {dat.ismine?null:(<div className=\"flex--active\">\n          <div className=\"GMessage--main--author\">{dat.owner}</div>\n          </div>)}\n                    <div className=\"Message--main--content\">\n                        {dat.mes}</div>\n                    <div className=\"Message--main--time\">12:00 pm</div>\n              </div>\n        )\n      })\n    }else{\n      meslist=users[Activeuser.index].message.map((dat,index)=>{\n        let last= (index==(users[Activeuser.index].message.length-1))\n        return(\n          <div ref={last?lastmessageref:null} className={dat.ismine?\"Message--main\": \"Message--oth\"}>\n                    <div className=\"Message--main--content\">\n                        {dat.mes}</div>\n                    <div className=\"Message--main--time\">12:00 pm</div>\n              </div>\n        )\n      })\n    }\n     \n  }\n  if(Profileinfo){\n    // console.log(\"Active user:\",Activeuser);\n    return(<Profile isgroup={Activeuser.isGroup} name={Activeuser.name} flag={setProfileinfo} uname={username.name} user={users} index={Activeuser.index} soc={soc}/>)\n  }\n  if(creategroup){\n      return (<UserList user={users} g={setcreategroup} soc={soc} index={Activeuser.index}/>)\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        Chat-System{\"(\"+username.name+\")\"}\n      </div>\n      <div className=\"Main--box\">\n        <div className=\"Main--box--users\">\n          <div className=\"title\">Users</div>\n          \n          {/* <div> New Group </div> */}\n          {/* {list?<UserList user={users}/>:<div>not found</div>} */}\n          <div className=\"Main--box--users--list\"> \n            {list}\n          </div>\n          <div className=\"username\" onClick={creategroup_signal}>New group+</div>\n        </div>\n        <div className=\"Main--box--chat\">\n          <div className=\"title\">\n            Chat Messages {Activeuser.isSet?<span className=\"Active--Username--display\" onClick={ProfileInfoSignal}>{Activeuser.name}</span>:null}\n          </div>\n          {/* {Activeuser.isGroup?(\n            <div className=\"flex--active flex--center\">\n              <div onClick={}>Add</div>\n              <div onClick={}>Remove</div>\n              <div onClick={}>Delete</div>\n            </div>\n          ):null} */}\n          <div className=\"Main--box--chat--messagearea\">\n          {Activeuser.isSet?meslist:\n          <div  className=\"Message--main \">\n            <div className=\"Message--main--content\">\n                      START TALKING</div>\n                  <div className=\"Message--main--time\">12:00 am</div>\n            </div>}\n          \n          {/*<div  className=\"GMessage--main GMessage--oth\">\n          <div className=\"flex--active\">\n          <div className=\"GMessage--main--author\">Sam</div>\n          </div>\n          <div className=\"GMessage--main--content\">\n                    START TALKING</div>\n                <div className=\"GMessage--main--time\">12:00 am</div>\n          </div>\n          <div  className=\"Message--main\">\n          <div className=\"Message--main--content\">\n                    START TALKING</div>\n                <div className=\"Message--main--time\">12:00 am</div>\n          </div>\n\n              <div  className=\"Message--main Message--oth\">\n                   <div className=\"Message--main--content\">\n                       Talking</div>\n                   <div className=\"Message--main--time\">12:00 pm</div>\n            </div> */}\n          \n          </div>\n          {Activeuser.isSet?\n          <div className=\"c\">\n          <form className=\"cb--bind\" onSubmit={mesSend}>\n                          <input className=\"text--area\" type=\"text\" id=\"mes\" name=\"mes\" required/>\n                          <button classes=\"button--height text--bold\">Enter</button>\n          </form>\n          \n          </div>\n          :null}\n          \n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}